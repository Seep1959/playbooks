user   www  www;
worker_processes  1;

events {
    # After increasing this value You probably should increase limit
    # of file descriptors (for example in start_precmd in startup script)
    worker_connections  1024;
}
http{
    server {
        listen       80;
       server_name  10.0.4.12;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;


        location / {
            root   /usr/local/www/nginx;
            index  index.html index.htm;
        }

        location /subsonic {
            proxy_pass http://10.0.4.13:4040;
            access_log off;
        }


        location /munin/ {
            proxy_pass http://192.168.1.13/munin/;
            proxy_set_header X-Real-IP $remote_addr;
            auth_basic "Munin";
            auth_basic_user_file /usr/local/etc/nginx/munin.htpasswd;
        }

        location /munin-cgi/ {
            proxy_pass http://192.168.1.13/munin-cgi/;
            proxy_set_header X-Real-IP $remote_addr;
            auth_basic "Munin";
            auth_basic_user_file /usr/local/etc/nginx/munin.htpasswd;
        }

        #error_page  404              /404.html;


        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/local/www/nginx-dist;
        }

    }
    # HTTPS server
    #
    server {
        listen       443 ssl http2;
        server_name  10.0.4.12;
        keepalive_timeout 70;
        ssl                  on;
        ssl_certificate /etc/letsencrypt/live/piranhaa.net/fullchain.pem; 
        ssl_certificate_key /etc/letsencrypt/live/piranhaa.net/privkey.pem; 
        ssl_trusted_certificate /etc/letsencrypt/live/piranhaa.net/chain.pem;
        ssl_dhparam /etc/ssl/certs/dhparam.pem;

        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;        
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
        #add_header X-Frame-Options DENY;
        #add_header X-Content-Type-Options nosniff;
        ssl_session_tickets off; # Requires nginx >= 1.5.9
        ssl_stapling on; # Requires nginx >= 1.3.7
        ssl_stapling_verify on; # Requires nginx => 1.3.7



        proxy_set_header Accept-Encoding "";
        #proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header Front-End-Https on;

        #ssl_trusted_certificate cert/startcom-cabundle.crt;


        client_max_body_size 1G; # set max upload size

        ### Set timeouts ###
        proxy_read_timeout 600s;
        proxy_send_timeout 600s;
        proxy_connect_timeout 600s;
        
        location /subsonic {
            proxy_pass http://10.0.4.13:4040/subsonic;
            access_log off;
        }

        location /owncloud/ {
            proxy_pass http://owncloud.signet/owncloud/;

        }


        location / {
            root   html;
            index  index.html index.htm;
        }

   }

}
